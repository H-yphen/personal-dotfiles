### Define your colors for ease of use

# https://superuser.com/questions/248469/do-i-need-to-enclose-ansi-escape-sequences-in-and-in-a-bash-prompt

COL01='\[\e[30m\]' #bg color
COL02='\[\e[31m\]'
COL03='\[\e[32m\]'
COL04='\[\e[33m\]'
COL05='\[\e[34m\]'
COL06='\[\e[35m\]'
COL07='\[\e[36m\]'
COL08='\[\e[37m\]' #fg color

COL09='\[\e[90m\]' #bg light
COL10='\[\e[91m\]'
COL11='\[\e[92m\]'
COL12='\[\e[93m\]'
COL13='\[\e[94m\]'
COL14='\[\e[95m\]'
COL15='\[\e[96m\]'
COL16='\[\e[97m\]' #fg light

CBOLD='\[\e[1m\]'
CINVR='\[\e[7m\]'
CBLIN='\[\e[5m\]'

RESET='\[\e[0m\]'

###################################################################


### get current branch in git repo ################################
#function parse_git_branch() {
#	BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
#	if [ ! "${BRANCH}" == "" ]
#	then
#		STAT=`parse_git_dirty`
#		echo "( ${BRANCH}${STAT})"
#	else
#		echo ""
#	fi
#}
#
## get current status of git repo
#function parse_git_dirty {
#	status=`git status 2>&1 | tee`
#	dirty=`echo -n "${status}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
#	untracked=`echo -n "${status}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
#	ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
#	newfile=`echo -n "${status}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
#	renamed=`echo -n "${status}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
#	deleted=`echo -n "${status}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`
#	bits=''
#	if [ "${renamed}" == "0" ]; then
#		bits=" ${bits}"
#	fi
#	if [ "${ahead}" == "0" ]; then
#		bits=" ${bits}"
#	fi
#	if [ "${newfile}" == "0" ]; then
#		bits=" ${bits}"
#	fi
#	if [ "${untracked}" == "0" ]; then
#		bits=" ${bits}"
#	fi
#	if [ "${deleted}" == "0" ]; then
#		bits=" ${bits}"
#	fi
#	if [ "${dirty}" == "0" ]; then
#		bits=" ${bits}"
#	fi
#	if [ ! "${bits}" == "" ]; then
#		echo " ${bits}"
#	else
#		echo ""
#	fi
#}
#
#####################################################################

#TODO: Find a way to make this work with dark AND light col schemes
#hint: if bg of light theme = fg color code, then do the dark scheme

#USERBLOCK="${COL11}${CBOLD}[\u_\h]${RESET}"
#PARSEGIT="${COL08}\`parse_git_branch\`${RESET}"
CWD="${COL13}\w${RESET}"
PROMPT="${COL10}${CBOLD};${RESET}"
#FILLCOL="${COL04}"

PS1=" ${CWD} ${PROMPT} ${RESET}"

export PS1

unset USERBLOCK
unset PARSEGIT
unset CWD
unset PROMPT
unset FILLCOL

### right prompts ###################################################
#function prompt_right() {
#  echo -e "\033[0;36m\$(parse_git_branch)\033[0m"
#}
#
#function prompt_left() {
#  echo -e "\033[0;35m\$(nonzero_return)\w\033[0m"
#}
#
#function prompt() {
#    compensate=15
#    PS1=$(printf "%*s\r%s\n\$ " "$(($(tput cols)+${compensate}))" "$(prompt_right)" "$(prompt_left)")
#}
#PROMPT_COMMAND=prompt 
#####################################################################

export PS2="•"
export PROMPT_DIRTRIM=2 #shortens the dir structure

